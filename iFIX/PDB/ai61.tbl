// AI block Database Convert Table
// v6.1 -> 7.0

//typedef	struct
//{
//	INT32	lo;		/* low alarm */
//	INT32	lolo;		/* low low alarm */
//	INT32	hi;		/* high alarm */
//	INT32	hihi;		/* high high alarm */
//	INT32	dband;		/* alarm deadband */
//	INT32	roc;		/* rate of change of alarm */
//} AIALM_61;


	PBHDR	// phdr;		/* primary block header */
	DESC	// desc;		/* block descriptor */
	EGUREC	// egu;		/* egu info (analog) */
	IO_INFO	// ai_io;		/* IOREC and IODNAME */

// instead of this, use 6 int32s AIALM	//		alm;		/* alarm structure */
	INT32	//lo
	INT32	//lolo
	INT32	//hi
	INT32	//hihi
	INT32	//dband
	INT32	//roc

	INT16	//smooth;		/* smoothing constant */
	PDATA	//last_value;	/* last good value if in AUTO, else */
	PDATA	//pdata;		/* current scaled output */

	UCHAR	//status;		/* status bits:  or, nv */
	UCHAR	//xx;		/* force next field on even boundary */

	FLOAT	//target;		/* target value */
	FLOAT	//coldstart;	/* cold start */
	FLOAT	//lolim;		/* operator low limit */
	FLOAT	//hilim;		/* operator high limit */
	FLOAT	//ratelim;	/* operator rate of change limit */

	UINT16[4]	//spare[4];
	#EGU_DESC	//LongEguDesc;	    /* for longer egu tagnames - new to raptor*/
	#SCALE_FACTOR	//ScaleFactor;	    /* for more precious scalling - new to raptor*/
